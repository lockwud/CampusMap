generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Building {
  id        String     @id @default(uuid())
  name      String     @unique
  floors    Int  
  rooms     Room[]
  entrances Entrance[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())
}

model Room {
  id               String   @id @default(cuid())
  name             String
  description      String?
  x_coordinate     Float
  y_coordinate     Float
  neighbors        RoomNeighbor[] @relation("RoomNeighborsFrom")
  incomingNeighbors RoomNeighbor[] @relation("RoomNeighborsTo")
  entrances        Entrance[] @relation("RoomEntrances") 
  buildingId String
  Building   Building @relation(fields: [buildingId], references: [id])
}

model RoomNeighbor {
  id        String   @id @default(cuid())
  room      Room     @relation("RoomNeighborsFrom", fields: [roomId], references: [id])
  roomId    String
  toRoom    Room     @relation("RoomNeighborsTo", fields: [toRoomId], references: [id])
  toRoomId  String
  distance  Float
  connectionType String // e.g. "stair", "elevator", "hallway"
}

model Entrance {
  id        String   @id @default(cuid())
  name      String
  lat       Float
  lng       Float
  room      Room     @relation("RoomEntrances", fields: [roomId], references: [id])
  roomId    String
  buildingId String
  Building   Building @relation(fields: [buildingId], references: [id])
}

model UserPreference {
  id          String   @id @default(cuid())
  userId      String   @unique
  preference  String   // e.g. "fastest", "scenic", "accessible"
}

model UserLocation {
  id       String   @id @default(cuid())
  userId   String   @unique
  lat      Float
  lng      Float
  buildingId String?
  roomId   String?
  updatedAt DateTime @updatedAt
}